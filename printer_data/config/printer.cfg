[include mainsail.cfg]
[include stealthburner_leds.cfg]
[include KAMP_Settings.cfg]


[mcu]
# MCU auf Manta M8P Board
canbus_uuid: d90af9a09067

########## default

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor Manta M8P]
sensor_type: temperature_mcu
[temperature_sensor CB1]
sensor_type: temperature_host

#####################################################################
# 	X/Y Stepper Settings
#####################################################################


## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE2
dir_pin: PB4
enable_pin: !PC11
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan:gpio24
position_min: 0
position_endstop: 250
position_max: 250
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true
[tmc2209 stepper_x]
uart_pin: PC10
#diag_pin: PF3 
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PF12
dir_pin: PF11
enable_pin: !PB3
microsteps: 16
rotation_distance: 40
endstop_pin: PF4
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
position_endstop: 250
position_max: 250
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true
[tmc2209 stepper_y]
uart_pin: PF13
#diag_pin: PF4
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PD7
dir_pin: PD6
enable_pin: !PF10
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 240
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3
homing_positive_dir: false
[tmc2209 stepper_z]
uart_pin: PF9
#diag_pin: PF5
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 300

##	Z1 Stepper - Rear Left on Motor4
[stepper_z1]
step_pin: PD3
dir_pin: !PD2
enable_pin: !PD5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
#endstop_pin: probe:z_virtual_endstop 
[tmc2209 stepper_z1]
uart_pin: PD4
#diag_pin: PC0
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 300

##	Z2 Stepper - Rear Right on Motor5
[stepper_z2]
step_pin: PC9
dir_pin: PC8
enable_pin: !PD1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
#endstop_pin: probe:z_virtual_endstop
[tmc2209 stepper_z2]
uart_pin: PD0
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 300

##	Z3 Stepper - Front Right on Motor6 
[stepper_z3]
step_pin: PA10
dir_pin: !PA14
enable_pin: !PA15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
#endstop_pin: probe:z_virtual_endstop
[tmc2209 stepper_z3]
uart_pin: PF8
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 300

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE1
heater_pin: PB5 
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PA0
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120


#####################################################################
# 	Fan Control
#####################################################################

#[heater_fan controller_fan]
###	Controller fan - CNC_FAN2
#pin: PC12
#kick_start_time: 0.5
#heater: heater_bed
#heater_temp: 45.0

#[heater_fan exhaust_fan]
##	Exhaust fan - CNC_FAN3
#pin: PE5
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
# Chamber Lighting - HE2 Connector
pin: PB6
pwm:true
shutdown_value: 0
value:0.15
cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 240

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:125,125
speed:200
z_hop:10



[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions
gantry_corners:
    10,10
    240, 240

##	Probe points
points:
    50,50   # Vorne links
    50,200    # Hinten links
    200,200   # Hinten rechts
    200,50  # Vorne rechts
speed: 300
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.05
max_adjust: 10

#######################################################################################################################################################################################
#   ____    ____       _        ______  _______      ___     ______   
#  |_   \  /   _|     / \     .' ___  ||_   __ \   .'   `. .' ____ \  
#    |   \/   |      / _ \   / .'   \_|  | |__) | /  .-.  \| (___ \_| 
#    | |\  /| |     / ___ \  | |         |  __ /  | |   | | _.____`.  
#   _| |_\/_| |_  _/ /   \ \_\ `.___.'\ _| |  \ \_\  `-'  /| \____) | 
#  |_____||_____||____| |____|`.____ .'|____| |___|`.___.'  \______.' 
#                                                                     
#######################################################################################################################################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_CLEANING
    G28
    STATUS_HOMING
    QUAD_GANTRY_LEVEL
    G28
    STATUS_HOMING
    G0 X125 Y125 Z30 F3600
    

[exclude_object]


#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}


  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize

  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  STATUS_LEVELING                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E20 F1000                                     # Primeline
  G90                                                   # Absolute position


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_BUSY
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament

    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[bed_mesh]
speed: 300
horizontal_move_z: 3
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
mesh_min: 40, 40
mesh_max: 210,210
zero_reference_position: 125,125 #for use with stock z endstop
#
###--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic



#######################################################################################################################################################################################
#     ______       _       ____  _____  ______  _____  _____   ______   
#   .' ___  |     / \     |_   \|_   _||_   _ \|_   _||_   _|.' ____ \  
#  / .'   \_|    / _ \      |   \ | |    | |_) | | |    | |  | (___ \_| 
#  | |          / ___ \     | |\ \| |    |  __'. | '    ' |   _.____`.  
#  \ `.___.'\ _/ /   \ \_  _| |_\   |_  _| |__) | \ \__/ /   | \____) | 
#   `.____ .'|____| |____||_____|\____||_______/   `.__.'     \______.' 
#  
#######################################################################################################################################################################################
[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 59012c399058

#Onboard Temperatur Sensor
[temperature_sensor Toolhead]
sensor_type: Generic 3950 
sensor_pin: EBBCan:gpio28

#Onboard Resonance-tester
[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x
[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345


[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
rotation_distance: 22.6789511
gear_ratio: 50:10
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan:gpio7
control: pid
pid_Kp: 21.336 
pid_Ki: 0.883 
pid_Kd: 128.814

##	Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
min_temp: 0
max_temp: 350
max_extrude_only_distance: 100.0

## PT1000 over CANBus SB2209 RPI2040 v1.0
sensor_type: MAX31865
sensor_pin: EBBCan:gpio9
spi_software_sclk_pin: EBBCan:gpio10
spi_software_mosi_pin: EBBCan:gpio8
spi_software_miso_pin: EBBCan:gpio11
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2
rtd_use_50Hz_filter: True
[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

[fan]
pin: EBBCan:gpio13

[heater_fan hotend_fan]
pin: EBBCan:gpio14
heater: extruder
heater_temp: 50.0
max_power: 1.0
kick_start_time: 0.5

[fan_generic 4W_FAN0]
pin: EBBCan:gpio15
tachometer_pin: EBBCan:gpio12
#tachometer_ppr: 1

#[neopixel hotend_rgb]
#pin: EBBCan:gpio16

[filament_switch_sensor filament_sensor]
# Filamentsensor an SB2209
switch_pin: !EBBCan:gpio21
pause_on_runout: True
runout_gcode: PAUSE
insert_gcode: RESUME

[probe]
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0
speed: 3.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
#z_offset: 0.2

#######################################################################################################################################################################################
#   $$$$$$\   $$$$$$\  $$\    $$\ $$$$$$$$\       $$$$$$\   $$$$$$\  $$\   $$\ $$$$$$$$\ $$$$$$\  $$$$$$\  
#  $$  __$$\ $$  __$$\ $$ |   $$ |$$  _____|     $$  __$$\ $$  __$$\ $$$\  $$ |$$  _____|\_$$  _|$$  __$$\ 
#  $$ /  \__|$$ /  $$ |$$ |   $$ |$$ |           $$ /  \__|$$ /  $$ |$$$$\ $$ |$$ |        $$ |  $$ /  \__|
#  \$$$$$$\  $$$$$$$$ |\$$\  $$  |$$$$$\ $$$$$$\ $$ |      $$ |  $$ |$$ $$\$$ |$$$$$\      $$ |  $$ |$$$$\ 
#   \____$$\ $$  __$$ | \$$\$$  / $$  __|\______|$$ |      $$ |  $$ |$$ \$$$$ |$$  __|     $$ |  $$ |\_$$ |
#  $$\   $$ |$$ |  $$ |  \$$$  /  $$ |           $$ |  $$\ $$ |  $$ |$$ |\$$$ |$$ |        $$ |  $$ |  $$ |
#  \$$$$$$  |$$ |  $$ |   \$  /   $$$$$$$$\      \$$$$$$  | $$$$$$  |$$ | \$$ |$$ |      $$$$$$\ \$$$$$$  |
#   \______/ \__|  \__|    \_/    \________|      \______/  \______/ \__|  \__|\__|      \______| \______/ 

#     _____    __      ________       _____ ____  _   _ ______ _____ _____ 
#    / ____|  /\ \    / /  ____|     / ____/ __ \| \ | |  ____|_   _/ ____|
#   | (___   /  \ \  / /| |__ ______| |   | |  | |  \| | |__    | || |  __ 
#    \___ \ / /\ \ \/ / |  __|______| |   | |  | | . ` |  __|   | || | |_ |
#    ____) / ____ \  /  | |____     | |___| |__| | |\  | |     _| || |__| |
#   |_____/_/    \_\/   |______|     \_____\____/|_| \_|_|    |_____\_____|
#######################################################################################################################################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 38.662
#*# pid_ki = 1.210
#*# pid_kd = 308.811
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.005000, -0.002500, 0.005000
#*# 	-0.010000, 0.000000, -0.000000
#*# 	-0.002500, -0.005000, 0.000000
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 115.0
#*# max_x = 135.0
#*# min_y = 115.0
#*# max_y = 135.0
#*#
#*# [probe]
#*# z_offset = -1.100
